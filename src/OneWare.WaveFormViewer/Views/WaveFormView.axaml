<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:OneWare.WaveFormViewer.ViewModels"
             xmlns:models="clr-namespace:OneWare.WaveFormViewer.Models"
             xmlns:controls="clr-namespace:OneWare.WaveFormViewer.Controls"
             xmlns:converters="clr-namespace:OneWare.Shared.Converters;assembly=OneWare.Shared"
             xmlns:controls1="clr-namespace:OneWare.Core.Views.Controls;assembly=OneWare.Core"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="450" x:DataType="viewModels:WaveFormViewModel"
             x:Class="OneWare.WaveFormViewer.Views.WaveFormView">

    <UserControl.Resources>
        <x:Double x:Key="LineHeight">40</x:Double>
        
        <ContextMenu x:Key="WaveModelContextMenu" x:DataType="models:WaveModel">
            <MenuItem Header="Remove Signal"
                      Command="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).RemoveSignal}" 
                      CommandParameter="{Binding}">
                <MenuItem.Icon>
                    <Image Source="{DynamicResource MaterialDesign.Delete}"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>

    <Grid Background="{DynamicResource ThemeControlLowBrush}" Name="TopPartGrid"
          RowDefinitions="Auto,*, 22">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="150" Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <Border Grid.Column="0" Height="30" Grid.ColumnSpan="3"
                Background="{DynamicResource ThemeBackgroundBrush}"
                BorderBrush="{DynamicResource ThemeBorderLowBrush}"
                BorderThickness="0, 0, 0, 1">
            <DockPanel LastChildFill="False">
                <StackPanel Classes="HToolBar" DockPanel.Dock="Left">
                    
                    <Button Command="{Binding XOffsetMinus}"
                            IsEnabled="{Binding Offset, Converter={x:Static converters:SharedConverters.NoComparisonConverter}, ConverterParameter=0}"
                            Width="30" ToolTip.Tip="Moves offset to left">
                        <Image Source="{DynamicResource BoxIcons.RegularChevronLeft}" />
                    </Button>
                    <Button Command="{Binding XOffsetPlus}" ToolTip.Tip="Moves offset to right">
                        <Image Source="{DynamicResource BoxIcons.RegularChevronRight}" />
                    </Button>
                    
                    <controls1:TimeSelectorBox AdjustInputToWaitUnit="True" FemtoSeconds="{Binding Offset, Mode=TwoWay}" Width="130"/>
                    
                    <Border Classes="SplitterBorder" />
                    
                    <Button Command="{Binding ResetView}" ToolTip.Tip="Reset View">
                        <Image Source="{DynamicResource FluentIconsFilled.FullScreenZoomFilled}" />
                    </Button>
                    <Button Command="{Binding ZoomOut}" ToolTip.Tip="Zooms out">
                        <Image Source="{DynamicResource BoxIcons.RegularZoomOut}" />
                    </Button>
                    <Button Command="{Binding ZoomIn}" ToolTip.Tip="Zooms in">
                        <Image Source="{DynamicResource BoxIcons.RegularZoomIn}" />
                    </Button>
                </StackPanel>
                
                <StackPanel Classes="HToolBar" DockPanel.Dock="Right">
               
                    <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="Zoom: "/>
                    <TextBlock Margin="0,0,0,0" VerticalAlignment="Center" 
                               Text="{Binding ZoomMultiply}" />
                    <TextBlock Margin="3,0,3,0" VerticalAlignment="Center" Text="x" />
                    
                    <Border Classes="SplitterBorder"/>
                    
                    <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="Cursor: " />
                    <TextBlock Margin="3,0,3,0" VerticalAlignment="Center" 
                               Text="{Binding CursorOffset, Converter={x:Static converters:SharedConverters.TimeUnitConverter}}" />
                   
                    
                    <Border Classes="SplitterBorder"/>
                    
                    <TextBlock Text="Marker: " />
                    <TextBlock Text="{Binding MarkerText}" />
                </StackPanel>
                
            </DockPanel>
        </Border>
        
        <ScrollViewer Padding="3,0,3,0" Name="TextPartScroll"
                      Bounds="{Binding #SimulatorScaleRenderer.TextAreaBounds, Mode=OneWayToSource}"
                      Grid.Column="0" Grid.Row="1" HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Hidden">
            <ItemsControl Padding="5, 0, 5, 0" ItemsSource="{Binding Signals}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="models:WaveModel">
                        <DockPanel Background="Transparent" ContextMenu="{StaticResource WaveModelContextMenu}"
                                   Height="{DynamicResource LineHeight}">
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal" DockPanel.Dock="Left">
                                <TextBlock Text="{Binding Signal.Name}" />
                                <TextBlock Text=" = " />
                                <TextBlock Text="{Binding MarkerValue}" FontWeight="Bold" Foreground="{DynamicResource ThemeAccentBrush}" />
                            </StackPanel>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <GridSplitter Background="{DynamicResource ThemeControlLowBrush}" Width="2" VerticalAlignment="Stretch"
                      Grid.Row="1"
                      Grid.Column="1" />

        <controls:WaveFormScale IsHitTestVisible="False" Margin="2,0,1,0" Name="SimulatorScaleRenderer"
                                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="2" />

        <ScrollViewer ClipToBounds="True" Name="SimPartScroll" Grid.Row="1" Grid.Column="2"
                      HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible">
            <ItemsControl ItemsSource="{Binding Signals}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="models:WaveModel">
                        <controls:Wave
                            Height="{DynamicResource LineHeight}"
                            Max="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).Max, FallbackValue={x:Null}}"
                            ZoomMultiply="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).ZoomMultiply, FallbackValue={x:Null}}"
                            Offset="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).Offset, FallbackValue={x:Null}}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                            ExtendSignals="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).ExtendSignals, FallbackValue={x:Null}}"
                            LoadingOffset="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).LoadingMarkerOffset, FallbackValue={x:Null}}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <controls:WaveFormEffects Name="SimulatorEffectsRenderer" VerticalAlignment="Stretch"
                                  IsHitTestVisible="False" Margin="0 0 1 0"
                                  HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="2" />
    </Grid>
</UserControl>