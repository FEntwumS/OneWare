<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:OneWare.Essentials.Controls;assembly=OneWare.Essentials"
             xmlns:models="clr-namespace:OneWare.Essentials.Models;assembly=OneWare.Essentials"
             xmlns:behaviors="clr-namespace:OneWare.Essentials.Behaviors;assembly=OneWare.Essentials"
             xmlns:behaviors1="clr-namespace:OneWare.ProjectExplorer.Behaviors"
             xmlns:viewModels="clr-namespace:OneWare.LibraryExplorer.ViewModels"
             xmlns:views1="clr-namespace:OneWare.ProjectExplorer.Views;assembly=OneWare.ProjectExplorer"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="450"
             x:Class="OneWare.LibraryExplorer.Views.LibraryExplorerView"
             Background="{DynamicResource ThemeControlLowBrush}"
             BorderBrush="{DynamicResource ThemeBorderLowBrush}"
             x:CompileBindings="True" x:DataType="viewModels:LibraryExplorerViewModel"
             Name="ProjectExplorerViewView"
             Foreground="{DynamicResource ThemeForegroundColor}"
             BorderThickness="0">

    <UserControl.Styles>
        <Style Selector="TextBox">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TextWrapping" Value="NoWrap" />
        </Style>

        <StyleInclude Source="avares://OneWare.ProjectExplorer/Views/ProjectExplorerTheme.axaml"></StyleInclude>
    </UserControl.Styles>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="2" BorderBrush="{DynamicResource ThemeBorderLowBrush}" BorderThickness="0 1 0 1">
            <controls:SearchBox Background="{DynamicResource ThemeBackgroundBrush}"
                                SearchText="{Binding SearchString, Mode=TwoWay}" VerticalAlignment="Center"
                                VerticalContentAlignment="Center" x:Name="SearchBox" Height="24" />
        </Border>
        <TreeDataGrid Name="ProjectTree" Grid.Row="1" CanUserSortColumns="False"
                      ShowColumnHeaders="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      CanUserResizeColumns="False"
                      AutoDragDropRows="False"
                      Source="{Binding Source}">
            <TreeDataGrid.ContextMenu>
                <ContextMenu Classes="BindMenu" x:Name="TreeViewContextMenu"
                             ItemsSource="{Binding TreeViewContextMenu}" />
            </TreeDataGrid.ContextMenu>
            <TreeDataGrid.Styles>
                <Style Selector="TreeDataGridRow" x:DataType="models:IProjectExplorerNode">
                    <Setter Property="Background" Value="{Binding Background}" />
                </Style>
                <Style Selector="TreeDataGridRow TextBox:disabled /template/ Border#border">
                    <Setter Property="Opacity" Value="1" />
                </Style>
                <!-- Manual two-way binding to Property IsExpanded -->
                <!-- If IsExpanded is bound directly, an unhandled exception when measuring the UI will occur -->
                <!-- Furthermore, it doesn't work to use the Func<bool> isExpanded property in the HierarchicalDataSource -->
                <Style Selector="TreeDataGridExpanderCell" x:DataType="models:IProjectFolder">
                    <Setter Property="views1:TreeDataGridExtension.IsExpandedExtension"
                            Value="{Binding IsExpanded, Mode=OneWay}" />
                </Style>
                <Style Selector="TreeDataGridExpanderCell /template/ ToggleButton#ExpanderToggleButton"
                       x:DataType="models:IProjectFolder">
                    <Setter Property="Command" Value="{Binding SetIsExpandedFromView}" />
                </Style>
            </TreeDataGrid.Styles>
            <TreeDataGrid.Resources>
                <DataTemplate x:Key="ProjectExplorerColumnTemplate" DataType="models:IProjectExplorerNode">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                            <ItemsControl ItemsSource="{Binding RightIcons}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Spacing="3" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding }" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Spacing="4" Background="Transparent">
                            <Interaction.Behaviors>
                                <behaviors:CommandOnDoubleTapBehavior
                                    Command="{Binding $parent[TreeView].((viewModels:LibraryExplorerViewModel)DataContext).DoubleTab, FallbackValue={x:Null}}"
                                    CommandParameter="{Binding}" />
                            </Interaction.Behaviors>

                            <Grid VerticalAlignment="Center">
                                <Image Height="16" Width="16"
                                       Source="{Binding Icon}" />
                                <ItemsControl ItemsSource="{Binding IconOverlays}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Panel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding }" Height="16" Width="16" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>

                            <controls:RenamingTextBox FontWeight="{Binding FontWeight}" ToolTip.Tip="{Binding Header}"
                                                      VerticalAlignment="Center"
                                                      IsEnabled="False" x:Name="RenamingTextBox"
                                                      Text="{Binding Header, Mode=OneWay}"
                                                      RenameAction="{Binding (models:IProjectEntry).RequestRename}"
                                                      Opacity="{Binding TextOpacity}" />
                        </StackPanel>
                    </DockPanel>
                </DataTemplate>
            </TreeDataGrid.Resources>
        </TreeDataGrid>
    </Grid>


</UserControl>