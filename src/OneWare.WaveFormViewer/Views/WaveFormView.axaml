<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:OneWare.WaveFormViewer.ViewModels"
             xmlns:models="clr-namespace:OneWare.WaveFormViewer.Models"
             xmlns:controls="clr-namespace:OneWare.WaveFormViewer.Controls"
             xmlns:converters="clr-namespace:OneWare.Essentials.Converters;assembly=OneWare.Essentials"
             xmlns:controls1="clr-namespace:OneWare.Essentials.Controls;assembly=OneWare.Essentials"
             xmlns:enums="clr-namespace:OneWare.WaveFormViewer.Enums"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="450" x:DataType="viewModels:WaveFormViewModel"
             x:Class="OneWare.WaveFormViewer.Views.WaveFormView" Focusable="True">

    <UserControl.Resources>
        <x:Double x:Key="LineHeight">40</x:Double>

        <ContextMenu x:Key="WaveModelContextMenu" x:DataType="models:WaveModel">
            <MenuItem Header="Data Format" ItemsSource="{Binding AvailableDataTypes}"
                      IsEnabled="{Binding AvailableDataTypes.Length}">
                <MenuItem.Styles>
                    <Style Selector="MenuItem MenuItem" x:DataType="enums:WaveDataType">
                        <Setter Property="Command"
                                Value="{Binding $parent[ContextMenu].((models:WaveModel)DataContext).SetDataType, FallbackValue={x:Null}}" />
                        <Setter Property="CommandParameter" Value="{Binding }" />
                        <Setter Property="Icon">
                            <Template>
                                <CheckBox BorderThickness="0">
                                    <CheckBox.IsChecked>
                                        <MultiBinding
                                            Converter="{x:Static converters:SharedConverters.ObjectsEqualConverter}">
                                            <Binding Path="." />
                                            <Binding
                                                Path="$parent[ContextMenu].((models:WaveModel)DataContext).DataType"
                                                FallbackValue="{x:Null}" />
                                        </MultiBinding>
                                    </CheckBox.IsChecked>
                                </CheckBox>
                            </Template>
                        </Setter>
                    </Style>
                </MenuItem.Styles>
            </MenuItem>
            <MenuItem Header="Fixed Point Shift">
                <MenuItem Header="Automatic"
                          Command="{Binding $parent[ContextMenu].((models:WaveModel)DataContext).ToggleAutomaticFixedPointShift, FallbackValue={x:Null}}"
                          ToolTip.Tip="For a signal var[15:-16], this will right shift the bits by 16 places">
                    <MenuItem.Icon>
                        <CheckBox BorderThickness="0" IsChecked="{Binding AutomaticFixedPointShift}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Specify"
                          Command="{Binding $parent[ContextMenu].((models:WaveModel)DataContext).SpecifyFixedPointShiftDialogAsync, FallbackValue={x:Null}}"
                          CommandParameter="$self" />
            </MenuItem>
            <MenuItem Header="Remove Signal"
                      Command="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).RemoveSignal, FallbackValue={x:Null}}"
                      CommandParameter="{Binding}">
                <MenuItem.Icon>
                    <Image Source="{DynamicResource MaterialDesign.Delete}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>

    <Grid Background="{DynamicResource ThemeControlLowBrush}" Name="TopPartGrid"
          RowDefinitions="Auto, 22, *, Auto">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="150" Width="150" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border Grid.Row="0" Grid.Column="0" Height="30" Grid.ColumnSpan="3"
                Background="{DynamicResource ThemeBackgroundBrush}"
                BorderBrush="{DynamicResource ThemeBorderLowBrush}"
                BorderThickness="0, 0, 0, 1">
            <DockPanel LastChildFill="False">
                <StackPanel Classes="HToolBar" DockPanel.Dock="Left">

                    <Button Command="{Binding XOffsetMinus}"
                            IsEnabled="{Binding Offset, Converter={x:Static converters:SharedConverters.NoComparisonConverter}, ConverterParameter=0}"
                            ToolTip.Tip="Moves offset to left">
                        <Image Source="{DynamicResource BoxIcons.RegularChevronLeft}" />
                    </Button>
                    <Button Command="{Binding XOffsetPlus}" ToolTip.Tip="Moves offset to right">
                        <Image Source="{DynamicResource BoxIcons.RegularChevronRight}" />
                    </Button>

                    <controls1:TimeSelectorBox AdjustDisplayToWaitUnit="True" Width="130"
                                               InOut="{Binding Offset, Mode=TwoWay}"
                                               InOutTimeScale="{Binding TimeScale}" />

                    <Border Classes="SplitterBorder" />

                    <Button Command="{Binding ResetView}" ToolTip.Tip="Reset View">
                        <Image Source="{DynamicResource FluentIconsFilled.FullScreenZoomFilled}" />
                    </Button>
                    <Button Command="{Binding ZoomOut}" ToolTip.Tip="Zooms out">
                        <Image Source="{DynamicResource BoxIcons.RegularZoomOut}" />
                    </Button>
                    <Button Command="{Binding ZoomIn}" ToolTip.Tip="Zooms in">
                        <Image Source="{DynamicResource BoxIcons.RegularZoomIn}" />
                    </Button>

                    <Button>
                        <Button.Flyout>
                            <Flyout FlyoutPresenterTheme="{StaticResource FlyoutNoPadding}">
                                <StackPanel Orientation="Vertical" Spacing="2" Margin="3">
                                    <StackPanel Orientation="Horizontal" Spacing="3">
                                        <TextBlock Text="Zoom:" />
                                        <TextBlock Text="{Binding ZoomLevel}" />
                                    </StackPanel>
                                    <Slider Width="200" TickFrequency="1" IsSnapToTickEnabled="True"
                                            TickPlacement="BottomRight"
                                            Minimum="{Binding MinZoomLevel}"
                                            Maximum="{Binding MaxZoomLevel}"
                                            Value="{Binding ZoomLevel}" />
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                        <Image Source="{DynamicResource MaterialDesign.KeyboardArrowDown}" Width="10" Height="10"
                               Margin="1 0" />
                    </Button>
                </StackPanel>

                <StackPanel Classes="HToolBar" DockPanel.Dock="Right">

                    <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="Zoom: " />
                    <TextBlock Margin="0,0,0,0" VerticalAlignment="Center"
                               Text="{Binding ZoomMultiply}" />
                    <TextBlock Margin="3,0,3,0" VerticalAlignment="Center" Text="x" />

                    <Border Classes="SplitterBorder" />

                    <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="Cursor: " />
                    <TextBlock Margin="3,0,3,0" VerticalAlignment="Center" Text="{Binding CursorText}" />


                    <Border Classes="SplitterBorder" />

                    <TextBlock Text="Marker: " />
                    <TextBlock Text="{Binding MarkerText}" ToolTip.Tip="{Binding MarkerTextOriginal}"/>
                </StackPanel>

            </DockPanel>
        </Border>

        <ScrollViewer Padding="3,0,3,0" Name="TextPartScroll"
                      Bounds="{Binding #SimulatorScaleRenderer.TextAreaBounds, Mode=OneWayToSource}"
                      Grid.Column="0" Grid.Row="2" HorizontalScrollBarVisibility="Disabled"
                      VerticalScrollBarVisibility="Hidden">
            <ItemsControl Padding="5, 0, 5, 0" ItemsSource="{Binding Signals}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="models:WaveModel">
                        <DockPanel Background="Transparent" ContextMenu="{StaticResource WaveModelContextMenu}"
                                   Height="{DynamicResource LineHeight}">
                            <Grid VerticalAlignment="Center" DockPanel.Dock="Left" PointerPressed="OnSignalNameClicked" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="50" Width="*" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding Signal.Name}"
                                           ToolTip.Tip="{Binding Signal.Name}" />
                                <TextBlock Grid.Column="2" TextTrimming="CharacterEllipsis"
                                           FontFamily="{DynamicResource EditorFont}"
                                           ToolTip.Tip="{Binding MarkerValue}" Text="{Binding MarkerValue}"
                                           FontWeight="Bold" Foreground="{DynamicResource ThemeAccentBrush}" />
                            </Grid>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <GridSplitter Background="{DynamicResource ThemeControlLowBrush}" Width="2" VerticalAlignment="Stretch"
                      Grid.Row="2"
                      Grid.Column="1" />

        <controls:WaveFormScale IsHitTestVisible="False" Margin="2,0,1,0" Name="SimulatorScaleRenderer"
                                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="2" />

        <ScrollViewer ClipToBounds="True" Name="SimPartScroll" Grid.Row="2" Grid.Column="2"
                      Offset="{Binding #TextPartScroll.Offset, Mode=TwoWay}"
                      HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible">
            <ItemsControl ItemsSource="{Binding Signals}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="models:WaveModel">
                        <controls:Wave
                            FontFamily="{DynamicResource EditorFont}"
                            Height="{DynamicResource LineHeight}"
                            Max="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).Max, FallbackValue={x:Null}}"
                            ZoomMultiply="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).ZoomMultiply, FallbackValue={x:Null}}"
                            Offset="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).Offset, FallbackValue={x:Null}}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            ExtendSignals="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).ExtendSignals, FallbackValue={x:Null}}"
                            LoadingOffset="{Binding $parent[UserControl].((viewModels:WaveFormViewModel)DataContext).LoadingMarkerOffset, FallbackValue={x:Null}}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <controls:WaveFormEffects Name="SimulatorEffectsRenderer" VerticalAlignment="Stretch"
                                  IsHitTestVisible="False" Margin="0 0 1 0"
                                  HorizontalAlignment="Stretch" Grid.Row="2" Grid.Column="2" />

        <Border Grid.Column="2" Grid.Row="3" Background="{DynamicResource ThemeBackgroundBrush}">
            <ScrollBar AllowAutoHide="False" Orientation="Horizontal"
                       Minimum="0"
                       Maximum="{Binding MaxScroll}"
                       Value="{Binding Offset}"
                       ViewportSize="{Binding ViewPortWidth}" />
        </Border>
    </Grid>
</UserControl>